<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czx.yimem.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.czx.yimem.entity.User">
        <constructor>
            <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="openid" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_sex" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="birthday" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="jion_job_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="present_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="census" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="head_img" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="phone_num" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emil" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="city_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="country_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="province_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="identity_num" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="census_city_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="census_country_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="census_province_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="invite_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="invited_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="createtime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>

        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        user_id,
        openid,
        user_name,
        user_sex,
        birthday,
        jion_job_time,
        present_address,
        census,
        head_img,
        phone_num,
        emil,
        remark,
        city_id,
        country_id,
        province_id,
        identity_num,
        password,
        census_city_id,
        census_country_id,
        census_province_id,
        invite_code,
        invited_code,
        createtime
    </sql>

    <select id="findByuserId" resultType="com.czx.yimem.entity.User" parameterType="java.lang.Integer">
        SELECT
            u.phone_num,
            u.user_id,
            u.user_name AS userName,
            (
                SELECT
                    g.c_name
                FROM
                    qs_category AS g
                WHERE
                        g.c_id = (
                        SELECT
                            k.education
                        FROM
                            education_exp AS k
                        WHERE
                            k.user_id = u.user_id
                        ORDER BY
                            k.end_time DESC
                        LIMIT 1
                    )
            ) AS education,
            (
                SELECT
                    k.school
                FROM
                    education_exp AS k
                WHERE
                    k.user_id = 1
                ORDER BY
                    k.end_time DESC
                LIMIT 1
            ) AS school,
            u.phone_num AS phoneNum,
            u.user_sex AS userSex,
            u.birthday,
            u.jion_job_time AS jionJobTime,
            u.city_id AS cityId,
            c.zh_label AS cityName,
            k.uuid as countryId,
            k.zh_label as countryName,
            u.emil,
            u.head_img AS headImg,
            w.province_code as provinceId,
            w.zh_label AS provinceName,
            TIMESTAMPDIFF(YEAR, u.birthday, NOW()) AS age,
            TIMESTAMPDIFF(YEAR, u.jion_job_time, NOW()) AS workage,
            u.census_city_id,
            u.census_country_id,
            u.census_province_id,
            q.zh_label as censusProvinceName,
            q2.zh_label as censusCityName,
            q3.zh_label as censusCountryName,
            u.remark,
            u.invite_code as inviteCode,
            u.identity_num as identityNum,
            jw.expected_salary_id,
            qc.c_name as expectedSalaryName
        FROM
            `user` AS u
            LEFT JOIN rm_city c ON c.uuid = u.city_id
           LEFT JOIN rm_province w on w.province_code =c.province_id
           LEFT JOIN rm_county k on k.uuid =u.country_id
           LEFT JOIN rm_province q on q.province_code =u.census_province_id
           LEFT JOIN rm_city q2 on q2.uuid =u.census_city_id
           LEFT JOIN rm_county q3 on q3.uuid =u.census_country_id
           LEFT JOIN job_wanted jw on jw.user_id=u.user_id
           LEFT JOIN qs_category qc on qc.c_id=jw.expected_salary_id
        WHERE
            u.user_id = #{id}
    </select>


    <select id="vpnuserbasicDeli" resultType="com.czx.yimem.dto.UserDeliVO" parameterType="java.lang.Integer">
        SELECT
            u.user_id,
            u.user_name AS userName,
            (
                SELECT
                    g.c_name
                FROM
                    qs_category AS g
                WHERE
                        g.c_id = (
                        SELECT
                            k.education
                        FROM
                            education_exp AS k
                        WHERE
                            k.user_id = u.user_id
                        ORDER BY
                            k.end_time DESC
                        LIMIT 1
                    )
            ) AS education,
            u.phone_num AS phoneNum,
            u.user_sex AS userSex,
            TIMESTAMPDIFF(YEAR, u.birthday, NOW()) AS age,
            TIMESTAMPDIFF(YEAR, u.jion_job_time, NOW()) AS workage,
            u.city_id AS cityId,
            c.zh_label AS cityName,
            u.emil,
            u.head_img AS headImg,
            j.start_money,
            j.end_money,
            kk.`name` AS companyName,
            m.categoryname AS jobName,
            kk.is_entrust AS weTo,
            x.state,
            qc.c_name AS expectedSalaryName
        FROM
            `user` AS u
            LEFT JOIN rm_city c ON c.uuid = u.city_id
           LEFT JOIN job_wanted j ON j.user_id = u.user_id
           LEFT JOIN deliver x ON x.user_id = u.user_id
           LEFT JOIN job i ON i.job_id = x.job_id
           LEFT JOIN company kk ON kk.company_id = i.company_id
           LEFT JOIN qs_category_jobs m ON m.id = i.job_cate_id
           LEFT JOIN qs_category qc ON qc.c_id = j.expected_salary_id
        WHERE
            x.dev_id = #{id}
    </select>

    <select id="selectByopenid" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where openid = #{openid,jdbcType=INTEGER}
    </select>


    <select id="findphone" resultType="java.lang.Integer" parameterType="java.lang.String">
        select
       count(*)
        from user
        where phone_num = #{phone}
    </select>
    <select id="findInviteCode" resultType="java.lang.Integer" parameterType="java.lang.String">
        select
       count(*)
        from user
        where invite_code = #{inviteCode}
    </select>


    <select id="findpasswordByuserId" resultType="java.lang.String" parameterType="java.lang.Integer">
        select
            `password`
        from user
        where user_id = #{userId}
    </select>

    <select id="findphone2" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where phone_num = #{phone}
    </select>

    <select id="findByuserCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select
            count(*)
        from user
        where user_id = #{user_id}
    </select>

    <select id="selectByUser" resultMap="BaseResultMap" parameterType="com.czx.yimem.entity.User">
        select
        <include refid="Base_Column_List"/>
        from user
        <where>
            1=1
            <if test="userSex != null and userSex != ''">
                and user_sex = #{userSex}
            </if>
            <if test="userName != null and userName != ''">
                and user_name =#{userName}
            </if>
            <if test="phoneNum != null and phoneNum != ''">
                and phone_num = #{phoneNum}
            </if>
            <if test="emil != null and emil != ''">
                and emil = #{emil}
            </if>
            <if test="jionJobTime != null and jionJobTime != ''">
                and jion_job_time = #{jionJobTime}
            </if>
        </where>
    </select>

    <select id="inviteList" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where invited_code = #{inviteCode,jdbcType=VARCHAR}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.czx.yimem.entity.User">
        insert into user (user_id, openid, user_name,
                          user_sex, birthday, jion_job_time,
                          present_address, census, head_img,
                          phone_num, emil, remark,
                          city_id, country_id, province_id,
                          identity_num,invited_code,invite_code)
        values (#{userId,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
                #{userSex,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{jionJobTime,jdbcType=TIMESTAMP},
                #{presentAddress,jdbcType=VARCHAR}, #{census,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR},
                #{phoneNum,jdbcType=VARCHAR}, #{emil,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
                #{cityId,jdbcType=INTEGER}, #{countryId,jdbcType=INTEGER}, #{provinceId,jdbcType=INTEGER},
                #{identityNum,jdbcType=VARCHAR}, #{invitedCode,jdbcType=VARCHAR}, #{inviteCode,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="userId" parameterType="com.czx.yimem.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userSex != null">
                user_sex,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="jionJobTime != null">
                jion_job_time,
            </if>
            <if test="presentAddress != null">
                present_address,
            </if>
            <if test="census != null">
                census,
            </if>
            <if test="headImg != null">
                head_img,
            </if>
            <if test="phoneNum != null">
                phone_num,
            </if>
            <if test="emil != null">
                emil,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="countryId != null">
                country_id,
            </if>
            <if test="provinceId != null">
                province_id,
            </if>
            <if test="identityNum != null">
                identity_num,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="invitedCode != null">
                invited_code,
            </if>
            <if test="inviteCode != null">
                invite_code,
            </if>
            <if test="censusCityId != null">
                census_city_id,
            </if>
            <if test="censusCountryId != null">
                census_country_id,
            </if>
            <if test="censusProvinceId != null">
                census_province_id,
            </if>
            <if test="createtime != null">
                createtime,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="jionJobTime != null">
                #{jionJobTime,jdbcType=TIMESTAMP},
            </if>
            <if test="presentAddress != null">
                #{presentAddress,jdbcType=VARCHAR},
            </if>
            <if test="census != null">
                #{census,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null">
                #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="phoneNum != null">
                #{phoneNum,jdbcType=VARCHAR},
            </if>
            <if test="emil != null">
                #{emil,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=INTEGER},
            </if>
            <if test="countryId != null">
                #{countryId,jdbcType=INTEGER},
            </if>
            <if test="provinceId != null">
                #{provinceId,jdbcType=INTEGER},
            </if>
            <if test="identityNum != null">
                #{identityNum,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="invitedCode != null">
               #{invitedCode,jdbcType=VARCHAR},
            </if>
            <if test="inviteCode != null">
               #{inviteCode,jdbcType=VARCHAR},
            </if>
            <if test="censusCityId != null">
                #{censusCityId,jdbcType=INTEGER},
            </if>
            <if test="censusCountryId != null">
                #{censusCountryId,jdbcType=INTEGER},
            </if>
            <if test="censusProvinceId != null">
                #{censusProvinceId,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.czx.yimem.entity.User">
        update user
        <set>
            <if test="openid != null and openid!=''">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="jionJobTime != null">
                jion_job_time = #{jionJobTime,jdbcType=TIMESTAMP},
            </if>
            <if test="presentAddress != null">
                present_address = #{presentAddress,jdbcType=VARCHAR},
            </if>
            <if test="census != null">
                census = #{census,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null and headImg!='' ">
                head_img = #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="phoneNum != null and phoneNum!=''">
                phone_num = #{phoneNum,jdbcType=VARCHAR},
            </if>
            <if test="emil != null">
                emil = #{emil,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=INTEGER},
            </if>
            <if test="countryId != null">
                country_id = #{countryId,jdbcType=INTEGER},
            </if>
            <if test="provinceId != null">
                province_id = #{provinceId,jdbcType=INTEGER},
            </if>
            <if test="identityNum != null">
                identity_num = #{identityNum,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="invitedCode != null">
                invited_code = #{invitedCode,jdbcType=VARCHAR},
            </if>
            <if test="inviteCode != null">
                invite_code = #{inviteCode,jdbcType=VARCHAR},
            </if>
            <if test="censusCityId != null">
                census_city_id = #{censusCityId,jdbcType=INTEGER},
            </if>
            <if test="censusCountryId != null">
                census_country_id = #{censusCountryId,jdbcType=INTEGER},
            </if>
            <if test="censusProvinceId != null">
                census_province_id = #{censusProvinceId,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.czx.yimem.entity.User">
        update user
        set openid          = #{openid,jdbcType=VARCHAR},
            user_name       = #{userName,jdbcType=VARCHAR},
            user_sex        = #{userSex,jdbcType=VARCHAR},
            birthday        = #{birthday,jdbcType=TIMESTAMP},
            jion_job_time   = #{jionJobTime,jdbcType=TIMESTAMP},
            present_address = #{presentAddress,jdbcType=VARCHAR},
            census          = #{census,jdbcType=VARCHAR},
            head_img        = #{headImg,jdbcType=VARCHAR},
            phone_num       = #{phoneNum,jdbcType=VARCHAR},
            emil            = #{emil,jdbcType=VARCHAR},
            remark          = #{remark,jdbcType=VARCHAR},
            city_id         = #{cityId,jdbcType=INTEGER},
            country_id      = #{countryId,jdbcType=INTEGER},
            province_id     = #{provinceId,jdbcType=INTEGER},
            identity_num    = #{identityNum,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <select id="selectByInviteCode" resultType="com.czx.yimem.entity.User">
        select * from user where invite_code = #{inviteCode} limit 1
    </select>
</mapper>
