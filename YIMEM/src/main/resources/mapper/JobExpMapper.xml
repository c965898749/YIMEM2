<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czx.yimem.dao.JobExpMapper" >
  <resultMap id="BaseResultMap" type="com.czx.yimem.entity.JobExp" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="company" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="position" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="salary" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="start_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="state" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="department" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, company, position, remark, salary, start_time, end_time, state,department
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from job_exp
    where id = #{id,jdbcType=INTEGER}  and state = "1"
  </select>

  <select id="findByjobExpCount" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select
count(*)    from job_exp
    where user_id = #{userId}  and state = "1"
  </select>

  <select id="findByjobExp" resultMap="BaseResultMap" parameterType="com.czx.yimem.entity.JobExp" >
    select
    <include refid="Base_Column_List" />
    from job_exp
    <where>
      1=1
      <if test="id != null and id != ''">
        and id = #{id}
      </if>
      <if test="userId != null and userId != ''">
        and user_id = #{userId}
      </if>
      <if test="company != null and company != ''">
        and company like  concat('%',#{company},'%')
      </if>
      <if test="position != null and position != ''">
        and position = #{position}
      </if>
      <if test="salary != null and salary != ''">
        and salary = #{salary}
      </if>
      <if test="state != null and state != ''">
        and state = #{state}
      </if>
    </where>
    ORDER BY end_time DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from job_exp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.czx.yimem.entity.JobExp" >
    insert into job_exp (id, user_id, company,
      position, remark, salary,
      start_time, end_time, state
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR},
      #{position,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{salary,jdbcType=DECIMAL},
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.czx.yimem.entity.JobExp" >
    insert into job_exp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="department != null" >
        department,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.czx.yimem.entity.JobExp" >
    update job_exp
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czx.yimem.entity.JobExp" >
    update job_exp
    set user_id = #{userId,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DECIMAL},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
