<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czx.yimem.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.czx.yimem.entity.Role">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="state" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, update_time, name, remark, state
  </sql>


  <select id="search" parameterType="com.czx.yimem.dto.RoleDTO" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from role
    <where>
      and state=1
      <if test="keyword != null and keyword != ''">
        and name like  concat('%',#{keyword},'%')
      </if>
      and flag=1
    </where>
    ORDER BY create_time DESC
  </select>

  <select id="selectByMemberId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select role.* from `role` ,`member`,rc_user_role
where role.id=rc_user_role.role_id
and member.id=rc_user_role.member_id
and member.id=#{mid,jdbcType=INTEGER}
and role.state=1

  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>


  <delete id="deleteRoleUser" parameterType="java.lang.Integer">
    delete from rc_user_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.czx.yimem.entity.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role (id, create_time, update_time,
      name, remark, state
      )
    values (#{id,jdbcType=INTEGER}, now(), now(),
      #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.czx.yimem.entity.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
        create_time,
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      now(),
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.czx.yimem.entity.Role">
    update role
    <set>
        update_time =now(),
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czx.yimem.entity.Role">
    update role
    set
      update_time = now(),
      name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
