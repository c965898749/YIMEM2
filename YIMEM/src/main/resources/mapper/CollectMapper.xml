<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czx.yimem.dao.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.czx.yimem.entity.Collect" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="job_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="company_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="dev_user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, job_id, state, create_time,company_id,dev_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from collect
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByuseridandjobid" resultType="java.lang.Integer" parameterType="com.czx.yimem.entity.Collect">
    select id
    from collect
    where user_id = #{userId} and job_id=#{jobId}
  </select>

  <select id="selectBygetCompanyIdandDevId" resultType="java.lang.Integer" parameterType="com.czx.yimem.entity.Collect">
    select id
    from collect
    where company_id = #{companyId} and dev_user_id=#{devUserId}
  </select>
  <select id="vpniscollectJob" resultType="java.lang.Integer" parameterType="com.czx.yimem.entity.Collect" >
    select
        count(1)
        from collect
    where user_id = #{userId} and job_id=#{jobId}
  </select>

  <select id="vpniscollectdev" resultType="java.lang.Integer" parameterType="com.czx.yimem.entity.Collect" >
    select
      count(1)
    from collect
    where company_id = #{companyId} and dev_user_id=#{devUserId}
  </select>

  <select id="findBycollect" resultMap="BaseResultMap" parameterType="com.czx.yimem.entity.Collect" >
    select
    <include refid="Base_Column_List" />
    from collect
    <where>
      1=1
      <if test="id != null and id != ''">
        and id = #{id}
      </if>
      <if test="userId != null and userId != ''">
        and user_id = #{userId}
      </if>
      <if test="jobId != null and jobId != ''">
        and job_id = #{jobId}
      </if>
        and state = "1"
    </where>
    ORDER BY create_time DESC
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.czx.yimem.entity.Collect" >
    insert into collect (id, user_id, job_id,
      state, create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER},
      #{state,jdbcType=VARCHAR}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.czx.yimem.entity.Collect" >
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="devUserId != null" >
        dev_user_id,
      </if>
        create_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId},
      </if>
      <if test="devUserId != null" >
        #{devUserId},
      </if>
        now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.czx.yimem.entity.Collect" >
    update collect
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      now(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czx.yimem.entity.Collect" >
    update collect
    set user_id = #{userId,jdbcType=INTEGER},
      job_id = #{jobId,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
